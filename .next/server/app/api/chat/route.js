(()=>{var e={};e.id=276,e.ids=[276],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},6904:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>g,routeModule:()=>p,serverHooks:()=>l,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>c});var s={};r.r(s),r.d(s,{POST:()=>u});var a=r(6559),n=r(8088),i=r(7719);let o=new(r(694)).z4({apiKey:process.env.OPENAI_API_KEY});async function u(e){let{message:t,thread_id:r}=await e.json();if(!t||!r)return new Response(JSON.stringify({error:"Message or thread_id missing."}),{status:400});try{let e=await o.chat.createThread({thread_id:r});await o.chat.addMessage(e.id,{role:"user",content:t});let s=await o.chat.getResponse(e.id);return new Response(JSON.stringify({assistantResponse:s.text}),{status:200})}catch(e){return new Response(JSON.stringify({error:e.message}),{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/chat/route",pathname:"/api/chat",filename:"route",bundlePath:"app/api/chat/route"},resolvedPagePath:"/Users/danielkoval/Documents/buildaiagent/KovalDeepAI-main/app/api/chat/route.js",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:c,serverHooks:l}=p;function g(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:c})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[719,184],()=>r(6904));module.exports=s})();