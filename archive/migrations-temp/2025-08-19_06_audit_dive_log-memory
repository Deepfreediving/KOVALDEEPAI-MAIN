-- Extend dive_log with fields your form uses (safe "if not exists")
alter table dive_log
  add column if not exists target_depth numeric(6,2),
  add column if not exists mouthfill_depth numeric(6,2),
  add column if not exists issue_depth numeric(6,2),
  add column if not exists issue_comment text,
  add column if not exists exit_status text,                 -- 'ok','early_turn','bailout', etc.
  add column if not exists duration_seconds integer,         -- pool
  add column if not exists distance_m integer,               -- pool
  add column if not exists attempt_type text,                -- 'pb','training','comp'...
  add column if not exists surface_protocol text,
  add column if not exists bottom_time_seconds integer,
  add column if not exists total_time_seconds integer,
  add column if not exists descent_seconds integer,
  add column if not exists ascent_seconds integer,
  add column if not exists descent_speed_mps numeric(6,3),
  add column if not exists ascent_speed_mps numeric(6,3),
  add column if not exists ear_squeeze boolean,
  add column if not exists lung_squeeze boolean,
  add column if not exists narcosis_level smallint,
  add column if not exists recovery_quality smallint,
  add column if not exists gear jsonb not null default '{}'::jsonb;

-- Audit results per dive
create table if not exists dive_log_audit (
  id uuid primary key default gen_random_uuid(),
  user_id uuid not null references auth.users(id) on delete cascade,
  log_id uuid not null references dive_log(id) on delete cascade,
  completeness_score smallint not null,      -- 0..100
  risk_score smallint not null,              -- 0..100 (higher = riskier)
  flags jsonb not null,                      -- array of strings or objects
  computed jsonb not null,                   -- derived metrics we calculated
  summary text not null,                     -- 1â€“3 sentences you can show in chat
  suggestions text not null,                 -- bullet list text
  created_at timestamptz not null default now(),
  unique (user_id, log_id)
);

alter table dive_log_audit enable row level security;

-- Drop existing policies if they exist, then recreate
drop policy if exists dla_read_own on dive_log_audit;
drop policy if exists dla_write_own on dive_log_audit;
drop policy if exists dla_update_own on dive_log_audit;
drop policy if exists dla_delete_own on dive_log_audit;

create policy dla_read_own on dive_log_audit for select using (auth.uid() = user_id);
create policy dla_write_own on dive_log_audit for insert with check (auth.uid() = user_id);
create policy dla_update_own on dive_log_audit for update using (auth.uid() = user_id) with check (auth.uid() = user_id);
create policy dla_delete_own on dive_log_audit for delete using (auth.uid() = user_id);
