import axios, { AxiosInstance } from 'axios';

// ‚úÖ Log missing environment variables early
console.log('üîé Checking required environment variables...');

if (!process.env.WIX_API_KEY) console.warn('‚ö†Ô∏è WIX_API_KEY is not set');
if (!process.env.WIX_ACCOUNT_ID) console.warn('‚ö†Ô∏è WIX_ACCOUNT_ID is not set');
if (!process.env.WIX_SITE_ID) console.warn('‚ö†Ô∏è WIX_SITE_ID is not set');
if (!process.env.OPENAI_API_KEY) console.warn('‚ö†Ô∏è OPENAI_API_KEY is not set');
if (!process.env.PINECONE_API_KEY) console.warn('‚ö†Ô∏è PINECONE_API_KEY is not set');
if (!process.env.PINECONE_HOST) console.warn('‚ö†Ô∏è PINECONE_HOST is not set');

// ‚úÖ Wix API Client
const wix: AxiosInstance = axios.create({
  baseURL: 'https://www.wixapis.com',
  headers: {
    Authorization: `Bearer ${process.env.WIX_API_KEY || ''}`,
    'wix-account-id': process.env.WIX_ACCOUNT_ID || '',
    'wix-site-id': process.env.WIX_SITE_ID || '',
    'Content-Type': 'application/json',
  },
});

// ‚úÖ OpenAI API Client
const openai: AxiosInstance = axios.create({
  baseURL: process.env.OPENAI_API_URL || 'https://api.openai.com/v1',
  headers: {
    Authorization: `Bearer ${process.env.OPENAI_API_KEY || ''}`,
    'Content-Type': 'application/json',
  },
});

// ‚úÖ Pinecone API Client
const pinecone: AxiosInstance = axios.create({
  baseURL: process.env.PINECONE_HOST || 'https://controller.${process.env.PINECONE_ENVIRONMENT}.pinecone.io',
  headers: {
    Authorization: `Bearer ${process.env.PINECONE_API_KEY || ''}`,
    'Content-Type': 'application/json',
  },
});

/**
 * ‚úÖ Checks the status of all API connections and returns their results.
 */
export async function checkAllConnections(): Promise<Record<string, string>> {
  const status: Record<string, string> = {};

  // ‚úÖ Wix API Check
  try {
    await wix.post('/v2/data/items/query', { data: {} });
    status.wix = '‚úÖ OK';
  } catch (err: any) {
    const message = err?.response?.data?.message || err?.message || 'Unknown error';
    console.warn('‚ö†Ô∏è Wix connection failed:', message);
    status.wix = `‚ùå Failed: ${message}`;
  }

  // ‚úÖ OpenAI API Check
  try {
    await openai.get('/models');
    status.openai = '‚úÖ OK';
  } catch (err: any) {
    const message = err?.response?.data?.error?.message || err?.message || 'Unknown error';
    console.warn('‚ö†Ô∏è OpenAI connection failed:', message);
    status.openai = `‚ùå Failed: ${message}`;
  }

  // ‚úÖ Pinecone API Check
  try {
    await pinecone.get('/databases');
    status.pinecone = '‚úÖ OK';
  } catch (err: any) {
    const message = err?.response?.data?.message || err?.message || 'Unknown error';
    console.warn('‚ö†Ô∏è Pinecone connection failed:', message);
    status.pinecone = `‚ùå Failed: ${message}`;
  }

  return status;
}

const apiClient = {
  wix,
  openai,
  pinecone,
  checkAllConnections,
};

export default apiClient;
